package com.solicite.prototipo6.ui.profile

import android.app.Activity
import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.provider.MediaStore
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.Button
import android.widget.EditText
import android.widget.ImageView
import android.widget.Toast
import androidx.fragment.app.Fragment
import androidx.lifecycle.ViewModelProvider
import com.solicite.prototipo6.R
import com.solicite.prototipo6.databinding.FragmentUpdateProfileBinding
import com.squareup.picasso.Picasso

class ProfileFragment : Fragment() {

    private var _binding: FragmentUpdateProfileBinding? = null
    private val binding get() = _binding!!
    private lateinit var profileViewModel: ProfileViewModel
    private val PICK_IMAGE_REQUEST = 1
    private var imageUri: Uri? = null

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View {
        _binding = FragmentUpdateProfileBinding.inflate(inflater, container, false)
        val root: View = binding.root

        profileViewModel = ViewModelProvider(this).get(ProfileViewModel::class.java)

        val imageView: ImageView = binding.profileImageView
        val nameEditText: EditText = binding.profileNameEditText
        val emailEditText: EditText = binding.profileEmailEditText
        val updateButton: Button = binding.updateProfileButton

        profileViewModel.profileImageUri.observe(viewLifecycleOwner) { uri ->
            if (uri != null) {
                Picasso.get().load(uri).into(imageView)
            } else {
                imageView.setImageResource(R.drawable.ic_profile_placeholder)
            }
        }

        profileViewModel.profileName.observe(viewLifecycleOwner) { name ->
            nameEditText.setText(name)
        }

        profileViewModel.profileEmail.observe(viewLifecycleOwner) { email ->
            emailEditText.setText(email)
        }

        imageView.setOnClickListener {
            val intent = Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI)
            startActivityForResult(intent, PICK_IMAGE_REQUEST)
        }

        updateButton.setOnClickListener {
            val name = nameEditText.text.toString()
            val email = emailEditText.text.toString()
            profileViewModel.updateProfile(name, email, imageUri)
        }

        profileViewModel.updateStatus.observe(viewLifecycleOwner) { status ->
            Toast.makeText(requireContext(), status, Toast.LENGTH_LONG).show()
        }

        return root
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        super.onActivityResult(requestCode, resultCode, data)
        if (requestCode == PICK_IMAGE_REQUEST && resultCode == Activity.RESULT_OK && data != null && data.data != null) {
            imageUri = data.data
            binding.profileImageView.setImageURI(imageUri)
        }
    }

    override fun onDestroyView() {
        super.onDestroyView()
        _binding = null
    }
}